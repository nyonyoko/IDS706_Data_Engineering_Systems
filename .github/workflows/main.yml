name: IDS706 CI (changed weeks)

on: [push, pull_request]

jobs:
  discover_changed:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.find.outputs.dirs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: find
        shell: bash
        run: |
          # Figure out the diff range
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            base="${{ github.event.pull_request.base.sha }}"
            head="${{ github.sha }}"
          else
            base="${{ github.event.before }}"
            head="${{ github.sha }}"
          fi

          # Collect changed top-level week dirs
          mapfile -t weeks < <(git diff --name-only "$base" "$head" \
            | awk -F/ '/^week[0-9]+\/.*/ {print $1}' \
            | sort -u)

          # Fallback: if none detected, test all week* dirs
          if [[ ${#weeks[@]} -eq 0 ]]; then
            mapfile -t weeks < <(find . -maxdepth 1 -type d -name 'week*' -printf '%f\n' | sort)
          fi

          # Emit JSON array for matrix
          printf -v json '%s\n' "$(printf '%s\n' "${weeks[@]}" | jq -R -s -c 'split("\n")[:-1]')"
          echo "dirs=$json" >> "$GITHUB_OUTPUT"

  test:
    needs: discover_changed
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        subdir: ${{ fromJSON(needs.discover_changed.outputs.dirs) }}
    defaults:
      run:
        working-directory: ./${{ matrix.subdir }}
    steps:
      - uses: actions/checkout@v4

      # Always set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Only enable pip cache if this week has requirements
      - name: Enable pip cache for this week
        if: hashFiles(format('{0}/requirements*.txt', matrix.subdir)) != ''
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: ${{ format('{0}/requirements*.txt', matrix.subdir) }}

      # Use the per-week Makefile. It installs deps conditionally and
      # skips tests cleanly if none exist.
      - name: Install (Makefile)
        run: make install

      - name: Format check (Makefile)
        run: make format-check

      - name: Lint (Makefile)
        run: make lint

      - name: Tests (Makefile; skips if none)
        run: make test

      # Build & run the week image if Dockerfile exists ---
      - name: Build Docker image (if Dockerfile)
        if: hashFiles(format('{0}/Dockerfile', matrix.subdir)) != ''
        working-directory: .
        run: |
          docker build -t ${{ matrix.subdir }}-image \
            -f ${{ matrix.subdir }}/Dockerfile .
      - name: Run Docker image tests (if Dockerfile)
        if: hashFiles(format('{0}/Dockerfile', matrix.subdir)) != ''
        run: docker run --rm ${{ matrix.subdir }}-image
